# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Article {
  articleId: String!
}

type Game {
  gameId: String!
}

input GameInput {
  gameId: String!
  year: String!
}

type Goalie {
  firstName: String!
  goalsAgainst: Float!
  lastName: String!
  playerId: String!
}

input GoaliesInput {
  sortOrder: GoaliesSortOrder = SavesPercent
  year: String!
}

enum GoaliesSortOrder {
  GoalsAgainst
  GoalsAgainstAverage
  Lost
  MinutesInPlay
  Saves
  SavesPercent
  ShooutOuts
  Tied
  Won
}

type Query {
  articles(input: TeamInput): [Article!]!
  game(input: GameInput!): Game
  games(input: StatisticsInput!): [Game!]!
  goalies(input: GoaliesInput!): [Goalie!]
  skaters(input: SkatersInput!): [Skater!]
  standings(input: StatisticsInput!): [StandingsEntry!]
  team(input: TeamInput!): Team
  teams: [Team!]!
  videos(input: TeamInput): [Video!]!
}

type Skater {
  firstName: String!
  goals: Float!
  lastName: String!
  playerId: String!
}

input SkatersInput {
  sortOrder: SkatersSortOrder = Points
  year: String!
}

enum SkatersSortOrder {
  Assists
  Goals
  Hits
  PenaltyMinutes
  PlusMinus
  Points
}

type StandingsEntry {
  goals: Float!
  goalsAgainst: Float!
  onePoints: Float!
  plusMinus: Float!
  points: Float!
  rank: Float!
  teamCode: String!
  threePoints: Float!
  twoPoints: Float!
  zeroPoints: Float!
}

input StatisticsInput {
  year: String!
}

type Team {
  finals: String!
  founded: String!
  golds: String!
  holyNumbers: String
  teamCode: String!
}

input TeamInput {
  teamCode: String!
}

type Video {
  videoId: String!
}
